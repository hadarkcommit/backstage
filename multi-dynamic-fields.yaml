apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: toggle-openapi-with-owner-gitea
  title: Toggle flag & optional owner (Gitea, one commit)
  description: >
    Prefills a checkbox from openapi.yaml (metadata.name). If enabled, shows a “hadar/no hadar”
    selector for spec.owner. Writes changes in one commit to Gitea.
spec:
  owner: group:default/platform
  type: utility

  parameters:
    - title: Flag & optional owner (prefilled from YAML)
      # these are still required, but hidden so the page is clean
      required: [repoOwner, repo, branch, feature]
      properties:
        repoOwner:
          title: ""
          type: string
          default: hadarkr60
          ui:widget: hidden
        repo:
          title: ""
          type: string
          default: backstage-test
          ui:widget: hidden
        branch:
          title: ""
          type: string
          default: main
          ui:widget: hidden

        feature:
          type: object
          title: Feature flag from openapi.yaml
          description: >
            We’ll prefill metadata.name from the repo. If you enable it, you’ll be prompted
            to choose an owner (hadar / no hadar) for spec.owner.
          ui:field: YamlFlagWithChoice
          ui:options:
            # where to read/write
            host: gitea.com
            ownerParam: repoOwner
            repoParam: repo
            branchParam: branch
            filePath: openapi.yaml
            # what to control
            booleanPath: metadata.name
            choicePath: spec.owner
            choices: ["hadar", "no hadar"]

  steps:
    - id: commit
      name: Apply changes in one commit (Gitea)
      action: gitea:file:yaml:commit:multi
      input:
        host: gitea.com
        owner:  ${{ parameters.repoOwner }}
        repo:   ${{ parameters.repo }}
        branch: ${{ parameters.branch }}
        filePath: openapi.yaml
        # The action should ignore undefined values (see note below).
        changes:
          - yamlPath: metadata.name
            value: ${{ parameters.feature.enabled }}
          - yamlPath: spec.owner
            value: ${{ parameters.feature.owner }}
        commitMessage: >-
          chore(backstage): metadata.name=${{ parameters.feature.enabled }}
          ${{ parameters.feature.owner && format(', spec.owner=%s', parameters.feature.owner) }}

  output:
    links:
      - title: View file in Gitea
        url: https://gitea.com/${{ parameters.repoOwner }}/${{ parameters.repo }}/src/branch/${{ parameters.branch }}/openapi.yaml
      - title: Repo
        url: https://gitea.com/${{ parameters.repoOwner }}/${{ parameters.repo }}

